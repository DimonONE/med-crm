{
  "openapi": "3.0.0",
  "paths": {
    "/users/login": {
      "post": {
        "operationId": "UsersController_login",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "tags": ["Users"]
      }
    },
    "/users/doctors": {
      "get": {
        "operationId": "UsersController_getAllDoctors",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserResponseEntity"
                  }
                }
              }
            }
          }
        },
        "tags": ["Users"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/users/create": {
      "post": {
        "operationId": "UsersController_makeProposal",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateClinicUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          }
        },
        "tags": ["Users"]
      }
    },
    "/users/roles": {
      "get": {
        "operationId": "UsersController_getRoles",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": ["Users"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/users/currentuser": {
      "get": {
        "operationId": "UsersController_get–°urentUser",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponseEntity"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponseEntity"
                }
              }
            }
          }
        },
        "tags": ["Users"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/users/user/{id}": {
      "get": {
        "operationId": "UsersController_getUserByID",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponseEntity"
                }
              }
            }
          }
        },
        "tags": ["Users"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/users/update": {
      "patch": {
        "operationId": "UsersController_update",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "tags": ["Users"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/users/delete": {
      "delete": {
        "operationId": "UsersController_removeCard",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": ["Users"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/users/create-visits": {
      "post": {
        "operationId": "UsersController_createVisits",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUpdateVisitTimeDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserVisitsEntity"
                  }
                }
              }
            }
          }
        },
        "tags": ["Users"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/users/create-vacation": {
      "post": {
        "operationId": "UsersController_createVacations",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateVacationDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserVacationEntity"
                }
              }
            }
          }
        },
        "tags": ["Users"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/users/create-work-time": {
      "post": {
        "operationId": "UsersController_createWorkTime",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUpdateWorkTimeDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserWorkTimeEntity"
                  }
                }
              }
            }
          }
        },
        "tags": ["Users"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/users/work-list": {
      "get": {
        "operationId": "UsersController_getWorkList",
        "parameters": [
          {
            "name": "doctorName",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "description": "Sort by ASC or DESC",
            "schema": {
              "nullable": true,
              "default": "ASC",
              "enum": ["ASC", "DESC"],
              "type": "string"
            }
          },
          {
            "name": "fieldBySort",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "required": false,
            "in": "query",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "description": "Need count patients",
            "schema": {
              "nullable": true,
              "type": "number"
            }
          },
          {
            "name": "offset",
            "required": true,
            "in": "query",
            "description": "Page",
            "schema": {
              "nullable": true,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseVisitSchema"
                  }
                }
              }
            }
          }
        },
        "tags": ["Users"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/admin/create-clinic": {
      "post": {
        "operationId": "UsersAdminController_createClinic",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateClinicUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserEntity"
                }
              }
            }
          }
        },
        "tags": ["Admin"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/admin/update-clinic": {
      "post": {
        "operationId": "UsersAdminController_updateClinic",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateClinicUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserEntity"
                }
              }
            }
          }
        },
        "tags": ["Admin"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/admin/add-type-clinic": {
      "post": {
        "operationId": "UsersAdminController_addTypeClinic",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTypeClinicDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TypeClinicEntity"
                }
              }
            }
          }
        },
        "tags": ["Admin"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/admin/all-type-clinic": {
      "get": {
        "operationId": "UsersAdminController_getAllTypeClinic",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TypeClinicEntity"
                  }
                }
              }
            }
          }
        },
        "tags": ["Admin"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/admin/switch-status-clinic": {
      "post": {
        "operationId": "UsersAdminController_switchStatusClinic",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SwitchStatusDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClinicEntity"
                }
              }
            }
          }
        },
        "tags": ["Admin"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/admin/switch-status-user": {
      "post": {
        "operationId": "UsersAdminController_statusUser",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SwitchStatusUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponseEntity"
                }
              }
            }
          }
        },
        "tags": ["Admin"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/admin/set-new-password": {
      "post": {
        "operationId": "UsersAdminController_setNewPassword",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetNewPasswordDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          }
        },
        "tags": ["Admin"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/admin/listofusers": {
      "get": {
        "operationId": "UsersAdminController_getListOfAviableUser",
        "parameters": [
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "description": "Need count patients",
            "schema": {
              "nullable": true,
              "type": "number"
            }
          },
          {
            "name": "status",
            "required": true,
            "in": "query",
            "description": "set Approve for get all clinics, set pending for get applications",
            "schema": {
              "enum": ["approval", "pending", "notapproval"],
              "type": "string"
            }
          },
          {
            "name": "offset",
            "required": true,
            "in": "query",
            "description": "Page",
            "schema": {
              "nullable": true,
              "type": "number"
            }
          },
          {
            "name": "sortBy",
            "required": true,
            "in": "query",
            "description": "Sort by ASC or DESC",
            "schema": {
              "nullable": true,
              "default": "ASC",
              "enum": ["ASC", "DESC"],
              "type": "string"
            }
          },
          {
            "name": "fieldSort",
            "required": true,
            "in": "query",
            "description": "Field to sort by ",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "name": "category",
            "required": true,
            "in": "query",
            "description": "Type clinic",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "name": "filter",
            "required": true,
            "in": "query",
            "description": "Doctor name",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserEntity"
                  }
                }
              }
            }
          }
        },
        "tags": ["Admin"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/admin/create-personal": {
      "post": {
        "operationId": "UsersAdminController_createPersonal",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CreatePersonalDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponseEntity"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientEntity"
                }
              }
            }
          }
        },
        "tags": ["Admin"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/admin/update-personal": {
      "post": {
        "operationId": "UsersAdminController_updatePersonal",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePersonalDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponseEntity"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientEntity"
                }
              }
            }
          }
        },
        "tags": ["Admin"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/admin/all-personal": {
      "get": {
        "operationId": "UsersAdminController_getAllPersonal",
        "parameters": [
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "description": "Need count patients",
            "schema": {
              "nullable": true,
              "type": "number"
            }
          },
          {
            "name": "offset",
            "required": true,
            "in": "query",
            "description": "Page",
            "schema": {
              "nullable": true,
              "type": "number"
            }
          },
          {
            "name": "sortBy",
            "required": true,
            "in": "query",
            "description": "Sort by ASC or DESC",
            "schema": {
              "nullable": true,
              "default": "ASC",
              "enum": ["ASC", "DESC"],
              "type": "string"
            }
          },
          {
            "name": "fieldSort",
            "required": true,
            "in": "query",
            "description": "Field to sort by ",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "name": "role",
            "required": true,
            "in": "query",
            "description": "Role user",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "name": "filter",
            "required": true,
            "in": "query",
            "description": "Doctor name",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserEntity"
                  }
                }
              }
            }
          }
        },
        "tags": ["Admin"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/patients/create": {
      "post": {
        "operationId": "PatientsController_createPatient",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CreatePatientDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientEntity"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientEntity"
                }
              }
            }
          }
        },
        "tags": ["Patients"]
      }
    },
    "/patients/update": {
      "post": {
        "operationId": "PatientsController_updatePatient",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePatientDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientEntity"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientEntity"
                }
              }
            }
          }
        },
        "tags": ["Patients"]
      }
    },
    "/patients/{id}": {
      "get": {
        "operationId": "PatientsController_getPatientById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientEntity"
                }
              }
            }
          }
        },
        "tags": ["Patients"]
      }
    },
    "/patients": {
      "get": {
        "operationId": "PatientsController_getPatients",
        "parameters": [
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "description": "Need count patients",
            "schema": {
              "nullable": true,
              "type": "number"
            }
          },
          {
            "name": "offset",
            "required": true,
            "in": "query",
            "description": "Page",
            "schema": {
              "nullable": true,
              "type": "number"
            }
          },
          {
            "name": "sortBy",
            "required": true,
            "in": "query",
            "description": "Sort by ASC or DESC",
            "schema": {
              "nullable": true,
              "default": "ASC",
              "enum": ["ASC", "DESC"],
              "type": "string"
            }
          },
          {
            "name": "filter",
            "required": true,
            "in": "query",
            "description": "Doctor name",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PatientEntity"
                  }
                }
              }
            }
          }
        },
        "tags": ["Patients"]
      }
    },
    "/patients/create-update-med-info": {
      "post": {
        "operationId": "PatientsController_medInfoCreate",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MedInfoPatientDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientEntity"
                }
              }
            }
          }
        },
        "tags": ["Patients"]
      }
    },
    "/record/create": {
      "post": {
        "operationId": "RecordController_createRecord",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRecordDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordEntity"
                }
              }
            }
          }
        },
        "tags": ["Record"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/record/update": {
      "post": {
        "operationId": "RecordController_updateRecord",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRecordDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordEntity"
                }
              }
            }
          }
        },
        "tags": ["Record"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/record/delete-record/{id}": {
      "delete": {
        "operationId": "RecordController_deleteRecord",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          }
        },
        "tags": ["Record"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/record/get-all-records": {
      "get": {
        "operationId": "RecordController_getRecords",
        "parameters": [
          {
            "name": "date",
            "required": true,
            "in": "query",
            "description": "Date find",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "userId",
            "required": true,
            "in": "query",
            "description": "Need user",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RecordEntity"
                  }
                }
              }
            }
          }
        },
        "tags": ["Record"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/record/get-all-records-patient": {
      "get": {
        "operationId": "RecordController_getAllRecordsPatient",
        "parameters": [
          {
            "name": "patientId",
            "required": true,
            "in": "query",
            "description": "Patient id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RecordEntity"
                  }
                }
              }
            }
          }
        },
        "tags": ["Record"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/record/create-service-price": {
      "post": {
        "operationId": "RecordController_createServicePrice",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateServicePriceDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServicePriceEntity"
                }
              }
            }
          }
        },
        "tags": ["Record"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/record/delete-service-price/{id}": {
      "delete": {
        "operationId": "RecordController_deleteServicePrice",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          }
        },
        "tags": ["Record"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/record/get-all-service-prices": {
      "get": {
        "operationId": "RecordController_getServices",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ServicePriceEntity"
                  }
                }
              }
            }
          }
        },
        "tags": ["Record"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/treatment/treatment-get": {
      "get": {
        "operationId": "TreatmentController_getTreatment",
        "parameters": [
          {
            "name": "patientId",
            "required": true,
            "in": "query",
            "description": "patient id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "doctorId",
            "required": true,
            "in": "query",
            "description": "doctor id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "description": "status",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "name": "category",
            "required": false,
            "in": "query",
            "description": "category find",
            "schema": {
              "nullable": true,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TreatmentEntity"
                  }
                }
              }
            }
          }
        },
        "tags": ["Treatment"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/treatment/treatment-get-by-id": {
      "get": {
        "operationId": "TreatmentController_getreatmentById",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TreatmentEntity"
                  }
                }
              }
            }
          }
        },
        "tags": ["Treatment"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/treatment/treatment-create": {
      "post": {
        "operationId": "TreatmentController_createTreatment",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTreatmentDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TreatmentEntity"
                }
              }
            }
          }
        },
        "tags": ["Treatment"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/treatment/treatment-update": {
      "post": {
        "operationId": "TreatmentController_updateTreatment",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTreatmentDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TreatmentEntity"
                }
              }
            }
          }
        },
        "tags": ["Treatment"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/treatment/answer-create": {
      "post": {
        "operationId": "TreatmentController_createAnswer",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/SubTreatmentDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnswerBlockEntity"
                }
              }
            }
          }
        },
        "tags": ["Treatment"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/template/create-update-body-block": {
      "post": {
        "operationId": "TemplateController_creatOrUpdateBodyBlock",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BodyBlockDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "tags": ["Template"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/template/create-sub-template": {
      "post": {
        "operationId": "TemplateController_createSubTemplate",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSubTemplateDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubTemplateEntity"
                }
              }
            }
          }
        },
        "tags": ["Template"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/template/create-template": {
      "post": {
        "operationId": "TemplateController_updateTemplate",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TemplateDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateEntity"
                }
              }
            }
          }
        },
        "tags": ["Template"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/template/get-one/{id}": {
      "get": {
        "operationId": "TemplateController_getTemplate",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateEntity"
                }
              }
            }
          }
        },
        "tags": ["Template"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/template/get-all/{id}": {
      "get": {
        "operationId": "TemplateController_getAllTemplate",
        "parameters": [
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "category",
            "required": false,
            "in": "query",
            "description": "id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": ["Template"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    }
  },
  "info": {
    "title": "Med CRM",
    "description": "Application for medical clinic",
    "version": "0.1",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http"
      }
    },
    "schemas": {
      "LoginUserDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Email user",
            "nullable": false
          },
          "password": {
            "type": "string",
            "description": "Password user",
            "nullable": false
          }
        },
        "required": ["email", "password"]
      },
      "FileSchema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "mimetype": {
            "type": "string"
          }
        },
        "required": ["name", "path", "mimetype"]
      },
      "CreateServicePriceDto": {
        "type": "object",
        "properties": {
          "price": {
            "type": "number",
            "description": "Price service"
          },
          "name": {
            "type": "string",
            "description": "Name Service"
          }
        },
        "required": ["price", "name"]
      },
      "RecordEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "userId": {
            "type": "string"
          },
          "clinicId": {
            "type": "object"
          },
          "patientId": {
            "type": "string"
          },
          "startTime": {
            "format": "date-time",
            "type": "string"
          },
          "endTime": {
            "format": "date-time",
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "servicePrices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateServicePriceDto"
            }
          },
          "notice": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/UserEntity"
          },
          "subTreatments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubTreatmentEntity"
            }
          }
        },
        "required": [
          "id",
          "userId",
          "clinicId",
          "patientId",
          "startTime",
          "endTime",
          "status",
          "servicePrices",
          "user",
          "subTreatments"
        ]
      },
      "AnswerBlockEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "data": {
            "type": "string"
          },
          "subTreatmentId": {
            "type": "number"
          },
          "subTreatments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubTreatmentEntity"
            }
          }
        },
        "required": ["id", "data", "subTreatmentId", "subTreatments"]
      },
      "SubTreatmentEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "treatmentId": {
            "type": "number"
          },
          "recordId": {
            "type": "number"
          },
          "positionId": {
            "type": "number"
          },
          "plan": {
            "type": "string"
          },
          "completed": {
            "type": "string"
          },
          "comment": {
            "type": "string"
          },
          "files": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "treatment": {
            "$ref": "#/components/schemas/TreatmentEntity"
          },
          "record": {
            "$ref": "#/components/schemas/RecordEntity"
          },
          "answerBlock": {
            "$ref": "#/components/schemas/AnswerBlockEntity"
          }
        },
        "required": [
          "id",
          "treatmentId",
          "recordId",
          "positionId",
          "plan",
          "completed",
          "comment",
          "files",
          "treatment",
          "record",
          "answerBlock"
        ]
      },
      "TreatmentEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "doctorId": {
            "type": "string"
          },
          "patientId": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "templateId": {
            "type": "number"
          },
          "status": {
            "type": "string"
          },
          "doctor": {
            "$ref": "#/components/schemas/UserEntity"
          },
          "patient": {
            "$ref": "#/components/schemas/PatientEntity"
          },
          "subTreatments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubTreatmentEntity"
            }
          }
        },
        "required": [
          "id",
          "doctorId",
          "patientId",
          "category",
          "templateId",
          "status",
          "doctor",
          "patient",
          "subTreatments"
        ]
      },
      "PatientEntity": {
        "type": "object",
        "properties": {
          "files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FileSchema"
            }
          },
          "medInfo": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "fullName": {
            "type": "string"
          },
          "passport": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "sex": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "passportIssuingAuthority": {
            "type": "string"
          },
          "tin": {
            "type": "string"
          },
          "dateOfBirth": {
            "format": "date-time",
            "type": "string"
          },
          "notice": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "image": {
            "type": "string"
          },
          "medInfoPath": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/UserEntity"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "treatmentsAsPatient": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TreatmentEntity"
            }
          }
        },
        "required": [
          "files",
          "medInfo",
          "id",
          "fullName",
          "passport",
          "country",
          "city",
          "address",
          "sex",
          "status",
          "passportIssuingAuthority",
          "tin",
          "dateOfBirth",
          "notice",
          "email",
          "phone",
          "image",
          "medInfoPath",
          "user",
          "createdAt",
          "updatedAt",
          "treatmentsAsPatient"
        ]
      },
      "UserVisitsEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "startTime": {
            "format": "date-time",
            "type": "string"
          },
          "endTime": {
            "format": "date-time",
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/UserEntity"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "id",
          "startTime",
          "endTime",
          "user",
          "createdAt",
          "updatedAt"
        ]
      },
      "UserWorkTimeEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "dayOfWeek": {
            "enum": [
              "Monday",
              "Tuesday",
              "Wednesday",
              "Thursday",
              "Friday",
              "Saturday",
              "Sunday"
            ],
            "type": "string"
          },
          "startTime": {
            "format": "date-time",
            "type": "string"
          },
          "endTime": {
            "format": "date-time",
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/UserEntity"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "id",
          "dayOfWeek",
          "startTime",
          "endTime",
          "user",
          "createdAt",
          "updatedAt"
        ]
      },
      "UserVacationEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "startTime": {
            "format": "date-time",
            "type": "string"
          },
          "endTime": {
            "format": "date-time",
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/UserEntity"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "id",
          "startTime",
          "endTime",
          "user",
          "createdAt",
          "updatedAt"
        ]
      },
      "TypeClinicEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "clinics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClinicEntity"
            }
          }
        },
        "required": ["id", "name", "clinics"]
      },
      "ClinicEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/TypeClinicEntity"
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserEntity"
            }
          },
          "status": {
            "type": "boolean"
          },
          "endPaidDate": {
            "format": "date-time",
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "save": {
            "type": "object"
          }
        },
        "required": [
          "id",
          "name",
          "description",
          "address",
          "country",
          "city",
          "phone",
          "type",
          "users",
          "status",
          "endPaidDate",
          "createdAt",
          "updatedAt",
          "save"
        ]
      },
      "UserEntity": {
        "type": "object",
        "properties": {
          "files": {
            "$ref": "#/components/schemas/FileSchema"
          },
          "id": {
            "type": "string"
          },
          "fullName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "image": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "role": {
            "$ref": "#/components/schemas/RoleEntity"
          },
          "specialization": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "dateOfBirth": {
            "format": "date-time",
            "type": "string"
          },
          "tin": {
            "type": "string"
          },
          "passportIssuingAuthority": {
            "type": "string"
          },
          "passport": {
            "type": "string"
          },
          "notice": {
            "type": "string"
          },
          "sex": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "patients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PatientEntity"
            }
          },
          "visits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserVisitsEntity"
            }
          },
          "workTimes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserWorkTimeEntity"
            }
          },
          "vacations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserVacationEntity"
            }
          },
          "clinic": {
            "$ref": "#/components/schemas/ClinicEntity"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "records": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecordEntity"
            }
          },
          "treatments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TreatmentEntity"
            }
          }
        },
        "required": [
          "files",
          "id",
          "fullName",
          "email",
          "phone",
          "image",
          "password",
          "role",
          "createdBy",
          "dateOfBirth",
          "tin",
          "passportIssuingAuthority",
          "passport",
          "notice",
          "sex",
          "status",
          "country",
          "city",
          "address",
          "patients",
          "visits",
          "workTimes",
          "vacations",
          "clinic",
          "createdAt",
          "updatedAt",
          "records",
          "treatments"
        ]
      },
      "RoleEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserEntity"
            }
          }
        },
        "required": ["id", "name", "users"]
      },
      "UserResponseEntity": {
        "type": "object",
        "properties": {
          "status": {
            "enum": ["approval", "pending", "notapproval"],
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "fullName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "image": {
            "type": "string"
          },
          "role": {
            "$ref": "#/components/schemas/RoleEntity"
          },
          "specialization": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "patients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PatientEntity"
            }
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "status",
          "id",
          "fullName",
          "email",
          "phone",
          "image",
          "role",
          "createdBy",
          "patients",
          "createdAt",
          "updatedAt"
        ]
      },
      "CreateClinicUserDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name clinic",
            "nullable": false
          },
          "description": {
            "type": "string",
            "description": "Short description clinic"
          },
          "phone": {
            "type": "string",
            "description": "Phone of the clinic",
            "nullable": false
          },
          "address": {
            "type": "string",
            "description": "Address of the clinic",
            "nullable": false
          },
          "country": {
            "type": "string",
            "description": "Country of the clinic",
            "nullable": false
          },
          "city": {
            "type": "string",
            "description": "Country of the clinic",
            "nullable": false
          },
          "type": {
            "type": "string",
            "description": "Type of the clinic (category)",
            "nullable": false
          },
          "fullName": {
            "type": "string",
            "description": "First name of the user",
            "nullable": false
          },
          "password": {
            "type": "string",
            "description": "Password of the user"
          },
          "email": {
            "type": "string",
            "description": "Email of the user",
            "nullable": false
          }
        },
        "required": ["fullName", "password", "email"]
      },
      "MessageResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        },
        "required": ["message"]
      },
      "UpdateUserDto": {
        "type": "object",
        "properties": {
          "fullName": {
            "type": "string",
            "description": "First name of the user",
            "nullable": false
          },
          "email": {
            "type": "string",
            "description": "Email of the user",
            "nullable": false
          },
          "phone": {
            "type": "string",
            "description": "Phone of the user",
            "nullable": false
          },
          "image": {
            "type": "string",
            "description": "Image of the user",
            "nullable": true
          },
          "password": {
            "type": "string",
            "description": "Password of the user"
          },
          "role": {
            "type": "string",
            "enum": ["superAdmin", "medChief", "doctor", "reception"],
            "description": "Role for user"
          },
          "specialization": {
            "type": "string",
            "description": "Specialization for doctor"
          }
        }
      },
      "VisitTimesDto": {
        "type": "object",
        "properties": {
          "startTime": {
            "format": "date-time",
            "type": "string"
          },
          "endTime": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": ["startTime", "endTime"]
      },
      "CreateUpdateVisitTimeDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "User id"
          },
          "date": {
            "format": "date-time",
            "type": "string",
            "description": "need date"
          },
          "times": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VisitTimesDto"
            }
          }
        },
        "required": ["userId", "date", "times"]
      },
      "CreateVacationDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "User id"
          },
          "startDate": {
            "format": "date-time",
            "type": "string",
            "description": "need date"
          },
          "endDate": {
            "format": "date-time",
            "type": "string",
            "description": "need date"
          }
        },
        "required": ["userId", "startDate", "endDate"]
      },
      "TimesDto": {
        "type": "object",
        "properties": {
          "startTime": {
            "format": "date-time",
            "type": "string"
          },
          "endTime": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": ["startTime", "endTime"]
      },
      "CreateUpdateWorkTimeDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "User id"
          },
          "dayOfWeek": {
            "type": "string",
            "enum": [
              "Monday",
              "Tuesday",
              "Wednesday",
              "Thursday",
              "Friday",
              "Saturday",
              "Sunday"
            ],
            "description": "Day of week "
          },
          "times": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TimesDto"
            }
          }
        },
        "required": ["userId", "dayOfWeek", "times"]
      },
      "ResponseVisitSchema": {
        "type": "object",
        "properties": {
          "doctor": {
            "$ref": "#/components/schemas/UserEntity"
          },
          "totalWeek": {
            "type": "number"
          },
          "totalMonth": {
            "type": "number"
          }
        },
        "required": ["doctor", "totalWeek", "totalMonth"]
      },
      "UpdateClinicUserDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name clinic",
            "nullable": false
          },
          "description": {
            "type": "string",
            "description": "Short description clinic"
          },
          "phone": {
            "type": "string",
            "description": "Phone of the clinic",
            "nullable": false
          },
          "address": {
            "type": "string",
            "description": "Address of the clinic",
            "nullable": false
          },
          "country": {
            "type": "string",
            "description": "Country of the clinic",
            "nullable": false
          },
          "city": {
            "type": "string",
            "description": "Country of the clinic",
            "nullable": false
          },
          "type": {
            "type": "string",
            "description": "Type of the clinic (category)",
            "nullable": false
          },
          "userId": {
            "type": "string",
            "description": "First name of the user",
            "nullable": false
          },
          "fullName": {
            "type": "string",
            "description": "First name of the user",
            "nullable": false
          },
          "email": {
            "type": "string",
            "description": "Email of the user",
            "nullable": false
          }
        },
        "required": ["userId", "fullName", "email"]
      },
      "CreateTypeClinicDto": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Type clinic",
            "nullable": false
          }
        },
        "required": ["type"]
      },
      "SwitchStatusDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "Id clinic",
            "nullable": false
          }
        },
        "required": ["id"]
      },
      "SwitchStatusUserDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "id user"
          },
          "status": {
            "enum": ["approval", "pending", "notapproval"],
            "type": "string",
            "description": "Status",
            "nullable": false
          }
        },
        "required": ["id", "status"]
      },
      "SetNewPasswordDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "required": ["userId", "password"]
      },
      "CreatePersonalDto": {
        "type": "object",
        "properties": {
          "fullName": {
            "type": "string",
            "description": "Full name of the patient",
            "nullable": false
          },
          "passport": {
            "type": "string",
            "description": "Patient passport id",
            "nullable": false
          },
          "country": {
            "type": "string",
            "description": "Patient country",
            "nullable": false
          },
          "role": {
            "type": "string",
            "enum": ["superAdmin", "medChief", "doctor", "reception"],
            "description": "Role for user"
          },
          "city": {
            "type": "string",
            "description": "Patient city",
            "nullable": false
          },
          "address": {
            "type": "string",
            "description": "Patient address",
            "nullable": false
          },
          "password": {
            "type": "string",
            "description": "Password of the user"
          },
          "passportIssuingAuthority": {
            "type": "string",
            "description": "passport issuing authority",
            "nullable": false
          },
          "sex": {
            "enum": ["man", "woman"],
            "type": "string",
            "description": "Personal sex",
            "nullable": false
          },
          "tin": {
            "type": "string",
            "description": "Passport issued by",
            "nullable": false
          },
          "email": {
            "type": "string",
            "description": "Email of the patient",
            "nullable": false
          },
          "phone": {
            "type": "string",
            "description": "Phone of the patient",
            "nullable": false
          },
          "dateOfBirth": {
            "format": "date-time",
            "type": "string",
            "description": "Date of birth of the patient"
          },
          "notice": {
            "type": "string",
            "description": "Notice about patient",
            "nullable": true
          },
          "image": {
            "type": "string",
            "format": "binary",
            "description": "Patient photo"
          },
          "files": {
            "type": "string",
            "format": "binary",
            "description": "Patient document scan"
          },
          "–∑": {
            "type": "object"
          }
        },
        "required": [
          "fullName",
          "passport",
          "country",
          "role",
          "city",
          "address",
          "password",
          "passportIssuingAuthority",
          "sex",
          "tin",
          "email",
          "phone",
          "dateOfBirth",
          "–∑"
        ]
      },
      "UpdatePersonalDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "id user"
          },
          "fullName": {
            "type": "string",
            "description": "Full name of the personal",
            "nullable": false
          },
          "passport": {
            "type": "string",
            "description": "Personal passport id",
            "nullable": false
          },
          "country": {
            "type": "string",
            "description": "Personal country",
            "nullable": false
          },
          "role": {
            "type": "string",
            "enum": ["superAdmin", "medChief", "doctor", "reception"],
            "description": "Role for user"
          },
          "city": {
            "type": "string",
            "description": "Personal city",
            "nullable": false
          },
          "address": {
            "type": "string",
            "description": "Personal address",
            "nullable": false
          },
          "passportIssuingAuthority": {
            "type": "string",
            "description": "passport issuing authority",
            "nullable": false
          },
          "sex": {
            "enum": ["man", "woman"],
            "type": "string",
            "description": "Personal sex",
            "nullable": false
          },
          "tin": {
            "type": "string",
            "description": "Passport issued by",
            "nullable": false
          },
          "email": {
            "type": "string",
            "description": "Email of the personal",
            "nullable": false
          },
          "phone": {
            "type": "string",
            "description": "Phone of the personal",
            "nullable": false
          },
          "dateOfBirth": {
            "format": "date-time",
            "type": "string",
            "description": "Date of birth of the personal"
          },
          "notice": {
            "type": "string",
            "description": "Notice about personal",
            "nullable": true
          },
          "files": {
            "description": "Files personal",
            "nullable": true,
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "image": {
            "type": "string",
            "description": "Image personal",
            "nullable": true
          },
          "newImage": {
            "type": "string",
            "format": "binary",
            "description": "Personal photo"
          },
          "newFiles": {
            "type": "string",
            "format": "binary",
            "description": "Personal document scan"
          }
        },
        "required": [
          "id",
          "fullName",
          "passport",
          "country",
          "role",
          "city",
          "address",
          "passportIssuingAuthority",
          "sex",
          "tin",
          "email",
          "phone",
          "dateOfBirth",
          "files"
        ]
      },
      "CreatePatientDto": {
        "type": "object",
        "properties": {
          "fullName": {
            "type": "string",
            "description": "Full name of the patient",
            "nullable": false
          },
          "passport": {
            "type": "string",
            "description": "Patient passport id",
            "nullable": false
          },
          "country": {
            "type": "string",
            "description": "Patient country",
            "nullable": false
          },
          "city": {
            "type": "string",
            "description": "Patient city",
            "nullable": false
          },
          "address": {
            "type": "string",
            "description": "Patient address",
            "nullable": false
          },
          "passportIssuingAuthority": {
            "type": "string",
            "description": "passport issuing authority",
            "nullable": false
          },
          "sex": {
            "enum": ["man", "woman"],
            "type": "string",
            "description": "Patient sex",
            "nullable": false
          },
          "tin": {
            "type": "string",
            "description": "Passport issued by",
            "nullable": false
          },
          "email": {
            "type": "string",
            "description": "Email of the patient",
            "nullable": false
          },
          "phone": {
            "type": "string",
            "description": "Phone of the patient",
            "nullable": false
          },
          "dateOfBirth": {
            "format": "date-time",
            "type": "string",
            "description": "Date of birth of the patient"
          },
          "notice": {
            "type": "string",
            "description": "Notice about patient",
            "nullable": true
          },
          "image": {
            "type": "string",
            "format": "binary",
            "description": "Patient photo"
          },
          "files": {
            "type": "string",
            "format": "binary",
            "description": "Patient document scan"
          }
        },
        "required": [
          "fullName",
          "passport",
          "country",
          "city",
          "address",
          "passportIssuingAuthority",
          "sex",
          "tin",
          "email",
          "phone",
          "dateOfBirth"
        ]
      },
      "UpdatePatientDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id patient",
            "nullable": false
          },
          "fullName": {
            "type": "string",
            "description": "Full name of the patient",
            "nullable": false
          },
          "passport": {
            "type": "string",
            "description": "Patient passport id",
            "nullable": false
          },
          "country": {
            "type": "string",
            "description": "Patient country",
            "nullable": false
          },
          "city": {
            "type": "string",
            "description": "Patient city",
            "nullable": false
          },
          "address": {
            "type": "string",
            "description": "Patient address",
            "nullable": false
          },
          "passportIssuingAuthority": {
            "type": "string",
            "description": "passport issuing authority",
            "nullable": false
          },
          "sex": {
            "enum": ["man", "woman"],
            "type": "string",
            "description": "Patient sex",
            "nullable": false
          },
          "tin": {
            "type": "string",
            "description": "Passport issued by",
            "nullable": false
          },
          "email": {
            "type": "string",
            "description": "Email of the patient",
            "nullable": false
          },
          "phone": {
            "type": "string",
            "description": "Phone of the patient",
            "nullable": false
          },
          "dateOfBirth": {
            "format": "date-time",
            "type": "string",
            "description": "Date of birth of the patient"
          },
          "notice": {
            "type": "string",
            "description": "Notice about patient",
            "nullable": true
          },
          "files": {
            "description": "files patient",
            "nullable": true,
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "image": {
            "type": "string",
            "description": "Image patient",
            "nullable": true
          },
          "newImage": {
            "type": "string",
            "format": "binary",
            "description": "Patient photo"
          },
          "newFiles": {
            "type": "string",
            "format": "binary",
            "description": "Patient document scan"
          }
        },
        "required": [
          "id",
          "fullName",
          "passport",
          "country",
          "city",
          "address",
          "passportIssuingAuthority",
          "sex",
          "tin",
          "email",
          "phone",
          "dateOfBirth",
          "files"
        ]
      },
      "MedInfoPatientDto": {
        "type": "object",
        "properties": {
          "info": {
            "type": "string",
            "description": "med info in json",
            "nullable": false
          },
          "patientId": {
            "type": "string",
            "description": "PatientId",
            "nullable": false
          }
        },
        "required": ["info", "patientId"]
      },
      "CreateRecordDto": {
        "type": "object",
        "properties": {
          "patientId": {
            "type": "string",
            "description": "Patient id"
          },
          "userId": {
            "type": "string",
            "description": "Doctor id"
          },
          "startTime": {
            "format": "date-time",
            "type": "string",
            "description": "Date of start record"
          },
          "endTime": {
            "format": "date-time",
            "type": "string",
            "description": "Date of end record"
          },
          "notice": {
            "type": "string",
            "description": "Notice record"
          },
          "servicePrices": {
            "description": "Price list",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateServicePriceDto"
            }
          }
        },
        "required": [
          "patientId",
          "userId",
          "startTime",
          "endTime",
          "notice",
          "servicePrices"
        ]
      },
      "UpdateRecordDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "Record id"
          },
          "userId": {
            "type": "string",
            "description": "Doctor id"
          },
          "startTime": {
            "format": "date-time",
            "type": "string",
            "description": "Date of start record"
          },
          "endTime": {
            "format": "date-time",
            "type": "string",
            "description": "Date of end record"
          },
          "notice": {
            "type": "string",
            "description": "Notice record"
          },
          "servicePrices": {
            "description": "Price list",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateServicePriceDto"
            }
          }
        },
        "required": [
          "id",
          "userId",
          "startTime",
          "endTime",
          "notice",
          "servicePrices"
        ]
      },
      "ServicePriceEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "price": {
            "type": "number"
          },
          "clinicId": {
            "type": "number"
          }
        },
        "required": ["id", "name", "price", "clinicId"]
      },
      "CreateTreatmentDto": {
        "type": "object",
        "properties": {
          "patientId": {
            "type": "string",
            "description": "patient id"
          },
          "doctorId": {
            "type": "string",
            "description": "doctor id"
          },
          "templateId": {
            "type": "number",
            "description": "template id"
          },
          "status": {
            "type": "string",
            "description": "status"
          },
          "category": {
            "type": "string",
            "description": "category"
          }
        },
        "required": ["patientId", "doctorId", "templateId"]
      },
      "UpdateTreatmentDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "id"
          },
          "status": {
            "type": "string",
            "description": "status"
          },
          "category": {
            "type": "string",
            "description": "category"
          }
        },
        "required": ["id"]
      },
      "SubTreatmentDto": {
        "type": "object",
        "properties": {
          "recordId": {
            "type": "number",
            "description": "record d patient"
          },
          "treatmentId": {
            "type": "number",
            "description": "treatment id"
          },
          "subTemplateId": {
            "type": "number",
            "description": "treatment id"
          },
          "completed": {
            "type": "string",
            "description": "completed"
          },
          "comment": {
            "type": "string",
            "description": "comment"
          },
          "plan": {
            "type": "string",
            "description": "plan"
          },
          "blocks": {
            "type": "string",
            "description": "Block info"
          },
          "files": {
            "type": "string",
            "format": "binary",
            "description": "Files"
          }
        },
        "required": [
          "recordId",
          "treatmentId",
          "subTemplateId",
          "completed",
          "comment",
          "plan"
        ]
      },
      "BlockDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "id"
          },
          "lineId": {
            "type": "number",
            "description": "id"
          },
          "sizeX": {
            "type": "number",
            "description": "id"
          },
          "sizeY": {
            "type": "number",
            "description": "id"
          },
          "positionId": {
            "type": "number",
            "description": "id"
          },
          "space": {
            "type": "number",
            "description": "id"
          },
          "status": {
            "enum": [
              "TEXT",
              "BOLD_TEXT",
              "CHECK_BOX",
              "RADIO_BOX",
              "DATE",
              "EMPTY",
              "WRITE_TEXT",
              "DROPDOWN",
              "POINT_TEXT"
            ],
            "type": "string",
            "description": "id"
          }
        },
        "required": ["sizeX", "sizeY", "positionId", "space", "status"]
      },
      "LineBlockDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "id"
          },
          "positionId": {
            "type": "number",
            "description": "id"
          },
          "bodyBlockId": {
            "type": "number",
            "description": "id"
          },
          "blockInfo": {
            "description": "id",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BlockDto"
            }
          }
        },
        "required": ["positionId", "blockInfo"]
      },
      "BodyBlockDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "id"
          },
          "name": {
            "type": "string",
            "description": "name body block"
          },
          "positionId": {
            "type": "number",
            "description": "position"
          },
          "subTemplateId": {
            "type": "number",
            "description": "sub templates id"
          },
          "lineBlocks": {
            "description": "id",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LineBlockDto"
            }
          }
        },
        "required": ["name", "positionId", "subTemplateId", "lineBlocks"]
      },
      "CreateSubTemplateDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "name"
          },
          "templateId": {
            "type": "number",
            "description": "template id"
          }
        },
        "required": ["name", "templateId"]
      },
      "BlockEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "lineId": {
            "type": "number"
          },
          "sizeX": {
            "type": "number"
          },
          "sizeY": {
            "type": "number"
          },
          "positionId": {
            "type": "number"
          },
          "space": {
            "type": "number"
          },
          "status": {
            "type": "string"
          },
          "lineBlock": {
            "$ref": "#/components/schemas/LineBlockEntity"
          }
        },
        "required": [
          "id",
          "lineId",
          "sizeX",
          "sizeY",
          "positionId",
          "space",
          "status",
          "lineBlock"
        ]
      },
      "LineBlockEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "positionId": {
            "type": "number"
          },
          "bodyBlockId": {
            "type": "number"
          },
          "bodyBlock": {
            "$ref": "#/components/schemas/BodyBlockEntity"
          },
          "blocks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BlockEntity"
            }
          }
        },
        "required": ["id", "positionId", "bodyBlockId", "bodyBlock", "blocks"]
      },
      "BodyBlockEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "positionId": {
            "type": "number"
          },
          "subTemplateId": {
            "type": "number"
          },
          "subTemplate": {
            "$ref": "#/components/schemas/SubTemplateEntity"
          },
          "lineBlocks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LineBlockEntity"
            }
          }
        },
        "required": [
          "id",
          "name",
          "positionId",
          "subTemplateId",
          "subTemplate",
          "lineBlocks"
        ]
      },
      "SubTemplateEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "templateId": {
            "type": "number"
          },
          "template": {
            "$ref": "#/components/schemas/TemplateEntity"
          },
          "bodyBlocks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BodyBlockEntity"
            }
          }
        },
        "required": ["id", "name", "templateId", "template", "bodyBlocks"]
      },
      "TemplateEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "category": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "techInfo": {
            "type": "string"
          },
          "subTemplates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubTemplateEntity"
            }
          }
        },
        "required": ["id", "category", "name", "techInfo", "subTemplates"]
      },
      "TemplateDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "id"
          },
          "category": {
            "type": "string",
            "description": "id"
          },
          "name": {
            "type": "string",
            "description": "id"
          },
          "techInfo": {
            "type": "string",
            "description": "id"
          }
        }
      }
    }
  }
}
